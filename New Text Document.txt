 class Solution {
public:
    bool helper(vector<vector<char>>& board)
    {
        int i, j;
        
        for(i=0; i<9; i++)
        {
            for(j=0; j<9; j++)
            {
                if(board[i][j] == '.')
                {
                    for(char c='1'; c<='9'; c++)
                    {
                        if(is_valid(i,j,c,board))
                        {
                            board[i][j] = c;
                            
                            if(helper(board))
                            {
                                return true;
                            }
                            else
                            {
                                board[i][j] = '.';
                            }
                        }
                        
                       
                    }
                    
                     return false;
                }
            }
        }
        
        return true;
    }
    
    bool is_valid(int row,int col,int c,vector<vector<char>>& board)
    {
        for(int i=0; i<9; i++)
        {
            if(board[row][i] == c)
            {
                return false;
            }
            else if(board[i][col] == c)
            {
                return false;
            }
            
            else if(board[3*(row/3)+i/3][3*(col/3) + i%3] == c)
            {
                return false;
            }
        }
        
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        
         helper(board);
    }
};